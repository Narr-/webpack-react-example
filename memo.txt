[Commands]

npm shrinkwrap --dev
npm install --production
docker run -e POSTGRES_USER=narr -e POSTGRES_DB=todo_db -p 5432:5432 -d postgres
psql -h 192.168.99.100 -U narr todo_db
./node_modules/pm2/bin/pm2 list
./node_modules/pm2/bin/pm2 delete all
node ./node_modules/pm2/bin/pm2-dev run ./ecosystem.json
NODE_ENV=production node ./node_modules/pm2/bin/pm2-dev run ./server
node -e 'process.env.NODE_ENV = \"production\"; require(\"./server\");'
docker ps -a
docker images -a
docker-compose up -d
docker run -it "image" bash => a new container
docker exec -it "image" bash => a running container
docker-compose run node bash => a new container, node is a name in docker-compose.yml




[Ref]

http://redux.js.org/index.html
https://egghead.io/series/getting-started-with-redux
https://github.com/reactjs/react-router
https://github.com/reactjs/react-router-redux
http://yelouafi.github.io/redux-saga/

https://github.com/enaqx/awesome-react
https://github.com/facebook/react/wiki/Complementary-Tools
https://github.com/xgrommx/awesome-redux

https://github.com/rackt/example-react-router-server-rendering-lazy-routes
http://spencerdixon.com/blog/test-driven-react-tutorial.html
http://teropa.info/blog/2015/09/10/full-stack-redux-tutorial.html#project-setup




[ETC]
// https://facebook.github.io/react/docs/reusable-components.html#stateless-functions
// https://medium.com/@joshblack/stateless-components-in-react-0-14-f9798f8b992d#.gksb1vrfq
const Counter = (value, onIncrement, onDecrement) => ( // props
  <div>
    <h1>{value}<h1>
    <button onClick={onIncrement}>+</button>
    <button onClick={onDecrement}>-</button>
  </div>
);
